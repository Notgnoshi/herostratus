use crate::achievement::{Achievement, Rule};

/// Grant achievements for commits starting with
///
/// * `fixup!`, `squash!`, `amend!` (generated by `git commit --fixup|--squash`)
/// * `WIP:`, `TODO:`, `FIXME:` `DROPME:` (ad-hoc patterns that I've seen in the wild)
pub struct IMeantToFixThatUpLaterISwear;

const PATTERNS: [&str; 11] = [
    "fixup!", "squash!", "amend!", "WIP", "TODO", "FIXME", "DROPME",
    // avoid false positives by accepting false negatives. Of all these patterns, "wip" is the one
    // that's most likely to be a part of a real word.
    "wip:", "todo", "fixme", "dropme",
];

impl Rule for IMeantToFixThatUpLaterISwear {
    fn name(&self) -> &'static str {
        "I meant to fix that up later, I swear!"
    }
    fn process(&mut self, commit: &git2::Commit, _repo: &git2::Repository) -> Option<Achievement> {
        let summary = commit.summary()?;
        for pattern in PATTERNS {
            if summary.starts_with(pattern) {
                return Some(Achievement { name: self.name() });
            }
        }
        None
    }
}
